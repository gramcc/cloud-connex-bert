import os

class Config:
    
    # Database configuration
    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL')
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    
    # Other configuration settings...
    PINECONE_API_KEY = os.environ.get("PINECONE_API_KEY")  # find at app.pinecone.io
    PINECONE_API_ENV = os.environ.get("PINECONE_API_ENV")  # next to api key in console
    SLACK_USER_ID = os.environ.get("SLACK_USER_ID") # find from the json response to a slack message
    SLACK_APP_TOKEN = os.environ.get("SLACK_APP_TOKEN") # find at slack bot setup page
    SLACK_BOT_TOKEN = os.environ.get("SLACK_BOT_TOKEN") # find at slack bot setup page
    DATABASE_URL = os.environ.get("DATABASE_URL") # find at heroku postgres setup page
    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL').replace("://", "ql://", 1)
    SALESFORCE_REFRESH_TOKEN = os.environ.get("SALESFORCE_REFRESH_TOKEN") # This is genereated separately for our app
    SALESFORCE_CLIENT_ID = os.environ.get("SALESFORCE_CLIENT_ID") # This is generated by salesforce
    SALESFORCE_CLIENT_SECRET = os.environ.get("SALESFORCE_CLIENT_SECRET") # This is generated by salesforce
    SALESFORCE_USERNAME = os.environ.get("SALESFORCE_USERNAME") # This is generated by salesforce
    SALESFORCE_PASSWORD = os.environ.get("SALESFORCE_PASSWORD") # This is generated by salesforce
    JIRA_INSTANCE_URL = os.environ.get("JIRA_INSTANCE_URL") # This is generated by jira
    JIRA_USERNAME = os.environ.get("JIRA_USERNAME") # This is generated by jira
    JIRA_TOKEN = os.environ.get("JIRA_TOKEN") # This is generated by jira
    
    # openai configuration
    OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY") # This is generated by openai
    CLASSIFICATION_MODEL = os.environ.get("CLASSIFICATION_MODEL") # Model fine-tuned on our data

    # add a immutable string that is universal to the rest of the code
    UNIQUE_STRING = "Purple unicorns tacos"

    # add a list of confirmations

    CONFIRMATIONS = [
        "Got it, I'll look into it.",
        "Noted, I'll follow up on your request.",
        "Received, I'll start working on it.",
        "Understood, I'll take care of your request.",
        "Acknowledged, I'll address your request promptly.",
        "Thank you for letting me know, I'll handle it.",
        "I've got your request, and I'll take appropriate action.",
        "Received your request, and I'll ensure it's taken care of.",
        "Got your message, I'll attend to your request right away.",
        "Thanks for reaching out, I'll make sure your request is addressed."
    ]

    # add a function to print all the variables
    def print_variables():
        print("PINECONE_API_KEY: "+Config.PINECONE_API_KEY)
        print("PINECONE_API_ENV: "+Config.PINECONE_API_ENV)
        print("SLACK_USER_ID: "+Config.SLACK_USER_ID)
        print("SLACK_BOT_TOKEN: "+Config.SLACK_BOT_TOKEN)
        print("UNIQUE_STRING: "+Config.UNIQUE_STRING)
